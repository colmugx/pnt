package "colmugx/pnt/util"

import(
  "moonbitlang/core/json"
  "moonbitlang/core/string"
)

// Values
fn create_dir(String) -> Unit!

fn download_file(String, String) -> Unit?

fn fetch_list() -> Array[RemoteNode]!FetchError

fn format_node_tarball(os_tag~ : String, cpu_arch~ : String, version~ : String) -> String

fn get_app_dir() -> String

fn get_arch() -> String

fn get_bin_dir() -> String

fn get_current_version() -> @string.StringView?

fn get_home() -> String

fn get_os() -> String

fn get_version() -> String

fn get_version_dir() -> String

fn is_version_installed(String) -> Bool

fn list_node() -> Array[String]

fn normalize_version(String) -> String

fn path_is_exist(String) -> Bool

fn read_config() -> Json!ReadModError

fn remove_by_version(String) -> Unit!

fn replace_symlink(String, String) -> Unit

// Types and methods
type FetchError

type ReadModError

pub struct RemoteNode {
  version : String
  date : String
  files : Array[String]
  lts : Json
  security : Bool
}
impl @json.FromJson for RemoteNode

// Type aliases

// Traits

